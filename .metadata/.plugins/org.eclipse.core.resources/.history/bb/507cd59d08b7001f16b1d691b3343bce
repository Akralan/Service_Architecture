package fr.insa.soap;

import jakarta.jws.WebMethod;
import jakarta.jws.WebService;
import jakarta.xml.ws.Endpoint;
import java.sql.*;

@WebService
public class AccountServiceSOAP {

    private static final String DB_URL = "jdbc:mysql://srv-bdens.insa-toulouse.fr:3306/projet_gei_039";
    private static final String DB_USER = "projet_gei_039";
    private static final String DB_PASSWORD = "auteD5ro";

    static {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            throw new RuntimeException("MySQL JDBC Driver not found.", e);
        }
    }

    @WebMethod
    public String createAccount(String name, String surname, String email, String birthdate, String type, String sex) {
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
            String sql = "INSERT INTO accounts (Name, Surname, Email, Birthdate, Type, Sex) VALUES (?, ?, ?, ?, ?, ?)";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setString(1, name);
                preparedStatement.setString(2, surname);
                preparedStatement.setString(3, email);
                preparedStatement.setDate(4, Date.valueOf(birthdate));
                preparedStatement.setString(5, type);
                preparedStatement.setString(6, sex);
                int rowsInserted = preparedStatement.executeUpdate();
                return rowsInserted > 0 ? "Account created successfully." : "Failed to create account.";
            }
        } catch (SQLException e) {
            return "Database error: " + e.getMessage();
        }
    }

    @WebMethod
    public String deleteAccount(int accountId) {
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
            String sql = "DELETE FROM accounts WHERE id = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setInt(1, accountId);
                int rowsDeleted = preparedStatement.executeUpdate();
                return rowsDeleted > 0 ? "Account deleted successfully." : "Failed to delete account.";
            }
        } catch (SQLException e) {
            return "Database error: " + e.getMessage();
        }
    }

    @WebMethod
    public String login(String email, String password) {
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
            String sql = "SELECT * FROM accounts WHERE email = ? AND password = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setString(1, email);
                preparedStatement.setString(2, password);
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    return resultSet.next() ? "Login successful." : "Invalid credentials.";
                }
            }
        } catch (SQLException e) {
            return "Database error: " + e.getMessage();
        }
    }

    public static void main(String[] args) {
        String url = "http://localhost:8100/AccountServiceSOAP";
        Endpoint.publish(url, new AccountServiceSOAP());
        System.out.println("Service running at " + url);
    }
}

